What happens when you initialize a repository? Why do you need to do it?

  To set the directory, in which the files of the programm for possible commits are located

How is the staging area different from the working directory and the repository?
What value do you think it offers?

  The staging area includes the  selected files for commit, while the working area includes all files, even if they are not selected for commit. The repository includes committed files and theirversions.

How can you use the staging area to make sure you have one commit per logical
change?

  By only adding and committing one file after another. Changes can be checked with "get diff --staged"

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

  Branches help, if you want to have a special version of a pgogramm, e.g. language or a simpler version, that is probably not intended to be merged to master again

How do the diagrams help you visualize the branch structure?

  They show the history tree including all different branches and their commits including ID, Commit Message and Branch Name.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

 A new merged branch with both merged commits as parent. In automatic merge, untouched, added or deleted lines are merged into the new branch (master). Therefore it is represented as a new common line.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
