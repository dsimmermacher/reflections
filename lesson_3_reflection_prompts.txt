When would you want to use a remote repository rather than keeping all your work
local?

    When you want so share work with others or work from different machines.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because of possible conflicts with local changes.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A fork is a clone of a repository in GitHub to another GitHub-repository. You would use it, of you want to work on an existing repository without sharing the added work with the author of the origin repository.
    A clone is a copy of a repository in a local mashine or vise versa.
    A Branch is a commit-tree beside the master-commit-tree.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    You can diff localy between both files. You can start a merge whenever it makes sense.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Without GitHub collaboration can be done by shared directorys and version numbering of files. Diff could get run manually to merge. Not using GitHub is partly "easier" because of no different formal steps and commands for the action needed, on the other hand, the activity without GitHub would be rather based on loose communication and needs more discipline to work.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
